package entidades;
// Generated 14/07/2014 03:02:32 AM by Hibernate Tools 3.6.0


import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Libro generated by hbm2java
 */
@Entity
@Table(name="libro"
    ,schema="public"
)
public class Libro  implements java.io.Serializable {


     private int idLibro;
     private Editorial editorial;
     private Autor autor;
     private Categoria categoria;
     private String tituloLibro;
     private String subtituloLibro;
     private Integer anhoLibro;
     private Double precio;
     private Boolean disponible;
     private Byte[] fotoLibro;
     private List<Comentario> comentarios = new ArrayList();
     private List<ContadorVisitas> contadorVisitases = new ArrayList();
     private List<DetalleVenta> detalleVentas = new ArrayList();

    public Libro() {
    }

	
    public Libro(int idLibro, String tituloLibro) {
        this.idLibro = idLibro;
        this.tituloLibro = tituloLibro;
    }
    public Libro(int idLibro, Editorial editorial, Autor autor, Categoria categoria, String tituloLibro, String subtituloLibro, Integer anhoLibro, Double precio, Boolean disponible, Byte[] fotoLibro, List<Comentario> comentarios, List<ContadorVisitas> contadorVisitases, List<DetalleVenta> detalleVentas) {
       this.idLibro = idLibro;
       this.editorial = editorial;
       this.autor = autor;
       this.categoria = categoria;
       this.tituloLibro = tituloLibro;
       this.subtituloLibro = subtituloLibro;
       this.anhoLibro = anhoLibro;
       this.precio = precio;
       this.disponible = disponible;
       this.fotoLibro = fotoLibro;
       this.comentarios = comentarios;
       this.contadorVisitases = contadorVisitases;
       this.detalleVentas = detalleVentas;
    }
   
     @Id 

    @GeneratedValue
    @Column(name="id_libro", unique=true, nullable=false)
    public int getIdLibro() {
        return this.idLibro;
    }
    
    public void setIdLibro(int idLibro) {
        this.idLibro = idLibro;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_editorial")
    public Editorial getEditorial() {
        return this.editorial;
    }
    
    public void setEditorial(Editorial editorial) {
        this.editorial = editorial;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_autor")
    public Autor getAutor() {
        return this.autor;
    }
    
    public void setAutor(Autor autor) {
        this.autor = autor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_cat")
    public Categoria getCategoria() {
        return this.categoria;
    }
    
    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    
    @Column(name="titulo_libro", nullable=false, length=25)
    public String getTituloLibro() {
        return this.tituloLibro;
    }
    
    public void setTituloLibro(String tituloLibro) {
        this.tituloLibro = tituloLibro;
    }

    
    @Column(name="subtitulo_libro", length=25)
    public String getSubtituloLibro() {
        return this.subtituloLibro;
    }
    
    public void setSubtituloLibro(String subtituloLibro) {
        this.subtituloLibro = subtituloLibro;
    }

    
    @Column(name="anho_libro")
    public Integer getAnhoLibro() {
        return this.anhoLibro;
    }
    
    public void setAnhoLibro(Integer anhoLibro) {
        this.anhoLibro = anhoLibro;
    }

    
    @Column(name="precio", precision=17, scale=17)
    public Double getPrecio() {
        return this.precio;
    }
    
    public void setPrecio(Double precio) {
        this.precio = precio;
    }

    
    @Column(name="disponible")
    public Boolean getDisponible() {
        return this.disponible;
    }
    
    public void setDisponible(Boolean disponible) {
        this.disponible = disponible;
    }

    
    @Column(name="foto_libro", length=1024)
    public Byte[] getFotoLibro() {
        return this.fotoLibro;
    }
    
    public void setFotoLibro(Byte[] fotoLibro) {
        this.fotoLibro = fotoLibro;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="libro")
    public List<Comentario> getComentarios() {
        return this.comentarios;
    }
    
    public void setComentarios(List<Comentario> comentarios) {
        this.comentarios = comentarios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="libro")
    public List<ContadorVisitas> getContadorVisitases() {
        return this.contadorVisitases;
    }
    
    public void setContadorVisitases(ArrayList contadorVisitases) {
        this.contadorVisitases = contadorVisitases;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="libro")
    public List<DetalleVenta> getDetalleVentas() {
        return this.detalleVentas;
    }
    
    public void setDetalleVentas(ArrayList detalleVentas) {
        this.detalleVentas = detalleVentas;
    }




}


